/*
 * FrameRegiaoManutencao.java
 *
 * Created on Sep 28, 2008, 10:20:09 PM
 */
package org.ai.forms.ambiente.regioes;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.InternalFrameEvent;
import javax.swing.event.InternalFrameListener;
import javax.swing.table.DefaultTableModel;

import org.ai.bo.ambiente.Cidade;
import org.ai.bo.ambiente.Regiao;
import org.ai.forms.FormMenuPrincipal;
import org.ai.forms.ambiente.cidades.FrameCidadeCadastro;
import org.ai.forms.ambiente.cidades.FrameCidadeManutencao;
import org.ai.forms.utils.ColumnResizer;

/**
 *
 * @author Edison
 */
public class FrameRegiaoManutencao extends javax.swing.JInternalFrame {

    private static final long serialVersionUID = 1L;

    private List<Cidade> listCidadesRegiao;
    private Regiao regiao;
    private DefaultTableModel modelCidadesRegiao;
    FormMenuPrincipal formPrincipal;


    public FrameRegiaoManutencao(FormMenuPrincipal formPrincipal, int idRegiao) {
        initComponents();
        this.formPrincipal = formPrincipal;
        this.regiao = Regiao.find(idRegiao);
        txtNomeRegiao.setText(regiao.getNome());
        listCidadesRegiao = regiao.getCidades();
        updateTableCidadesRegiao();
    }


    public void updateTableCidadesRegiao() {
        updateListCidadesRegiao();
        tableCidadesRegiao.setModel(modelCidadesRegiao);
        tableCidadesRegiao.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tableCidadesRegiao.setRowSelectionAllowed(true);
        tableCidadesRegiao.setColumnSelectionAllowed(false);
        ColumnResizer.adjustColumnPreferredWidths(tableCidadesRegiao);
        tableCidadesRegiao.revalidate();
        lblTotalCidades.setText(Integer.toString(listCidadesRegiao.size()));

    }

    private void updateListCidadesRegiao() {
        listCidadesRegiao = regiao.getCidades();
        String[] collumnNames = new String[]{"Estado", "Cidade"};
        String[][] data = new String[listCidadesRegiao.size()][];
        for (int i = 0; i < listCidadesRegiao.size(); i++) {
            data[i] = new String[]{
                        listCidadesRegiao.get(i).getEstado().getNome(),
                        listCidadesRegiao.get(i).getNome()
                    };
        }
        modelCidadesRegiao = new DefaultTableModel(data, collumnNames) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

    }

   
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popUpMenu = new javax.swing.JPopupMenu();
        btnSalvar = new javax.swing.JButton();
        btnFechar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        txtNomeRegiao = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        btnInserirCidade = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableCidadesRegiao = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        lblTotalCidades = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("Manutenção de Região");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/facear/tcc/forms/resources/location_16.png"))); // NOI18N

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/facear/tcc/forms/resources/location_write_16.png"))); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnFechar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/facear/tcc/forms/resources/Symbol Delete 2.png"))); // NOI18N
        btnFechar.setText("Fechar");
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });

        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/facear/tcc/forms/resources/location_remove_16.png"))); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        jLabel1.setText("Nome");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNomeRegiao, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNomeRegiao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(165, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Região", jPanel2);

        btnInserirCidade.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/facear/tcc/forms/resources/location_add_16.png"))); // NOI18N
        btnInserirCidade.setText("Inserir");
        btnInserirCidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInserirCidadeActionPerformed(evt);
            }
        });

        tableCidadesRegiao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableCidadesRegiao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableCidadesRegiaoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableCidadesRegiao);

        jLabel2.setText("Total Cidades:");

        lblTotalCidades.setText("total");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnInserirCidade)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTotalCidades)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInserirCidade)
                    .addComponent(jLabel2)
                    .addComponent(lblTotalCidades))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Cidades", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(btnExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFechar)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFechar)
                    .addComponent(btnSalvar)
                    .addComponent(btnExcluir))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        dispose();
}//GEN-LAST:event_btnFecharActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        int resposta = JOptionPane.showConfirmDialog(this, "Confirma exclusão da regiao " + regiao.getNome() + "?", "Atenção", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        if (resposta == JOptionPane.YES_OPTION) {
            boolean deleted = regiao.delete();
            if (deleted) {
                JOptionPane.showMessageDialog(this, "Regiao " + regiao.getNome() + " excluida com sucesso");
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao excluir regiao " + regiao.getNome());
            }
            dispose();
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        int resposta = JOptionPane.showConfirmDialog(this, "Salvar alterações da região " + regiao.getNome() + "?", "Atenção", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (resposta == JOptionPane.YES_OPTION) {
            regiao.setNome(txtNomeRegiao.getText());
            regiao.setCidades(listCidadesRegiao);
            boolean updated = regiao.update();
            if (updated) {
                JOptionPane.showMessageDialog(this, "Regiao " + regiao.getNome() + " salva com sucesso");
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao salvar regiao " + regiao.getNome());
            }
            dispose();
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

private void btnInserirCidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInserirCidadeActionPerformed
    FrameCidadeCadastro frame = new FrameCidadeCadastro(regiao);
    formPrincipal.getDesktopPane().add(frame);
    frame.setLocation((int) this.getBounds().getX(), (int) this.getBounds().getY() + this.getHeight());
    frame.setVisible(true);
    frame.addInternalFrameListener(new InternalFrameListener() {
        public void internalFrameOpened(InternalFrameEvent e) {}
        public void internalFrameClosing(InternalFrameEvent e) {}
        public void internalFrameClosed(InternalFrameEvent e) {
            regiao.setCidades(Regiao.find(regiao.getId()).getCidades());
            updateTableCidadesRegiao();
        }
        public void internalFrameIconified(InternalFrameEvent e) {}
        public void internalFrameDeiconified(InternalFrameEvent e) {}
        public void internalFrameActivated(InternalFrameEvent e) {}
        public void internalFrameDeactivated(InternalFrameEvent e) {}
    });
}//GEN-LAST:event_btnInserirCidadeActionPerformed

private void tableCidadesRegiaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableCidadesRegiaoMouseClicked
    if (tableCidadesRegiao.getSelectedRow() >= 0) {
        Cidade cidade = listCidadesRegiao.get(tableCidadesRegiao.getSelectedRow());
        FrameCidadeManutencao frame = new FrameCidadeManutencao(cidade.getId());
        formPrincipal.getDesktopPane().add(frame);
        frame.setLocation((int) this.getBounds().getX(), (int) this.getBounds().getY() + this.getHeight());
        frame.setVisible(true);
        frame.addInternalFrameListener(new InternalFrameListener() {
                public void internalFrameOpened(InternalFrameEvent e) {}
                public void internalFrameClosing(InternalFrameEvent e) {}
                public void internalFrameClosed(InternalFrameEvent e) {
                   regiao.setCidades(Regiao.find(regiao.getId()).getCidades());
                   updateTableCidadesRegiao();
                }
                public void internalFrameIconified(InternalFrameEvent e) {}
                public void internalFrameDeiconified(InternalFrameEvent e) {}
                public void internalFrameActivated(InternalFrameEvent e) {}
                public void internalFrameDeactivated(InternalFrameEvent e) {}
            });
    }
}//GEN-LAST:event_tableCidadesRegiaoMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnFechar;
    private javax.swing.JButton btnInserirCidade;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblTotalCidades;
    private javax.swing.JPopupMenu popUpMenu;
    private javax.swing.JTable tableCidadesRegiao;
    private javax.swing.JTextField txtNomeRegiao;
    // End of variables declaration//GEN-END:variables
}
